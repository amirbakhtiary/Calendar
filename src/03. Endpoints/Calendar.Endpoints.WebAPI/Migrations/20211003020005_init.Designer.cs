// <auto-generated />
using System;
using Calendar.Infrastructure.Data.Sql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Calendar.Endpoints.WebAPI.Migrations
{
    [DbContext(typeof(CalendarContext))]
    [Migration("20211003020005_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Calendar.Core.Domain.Entities.EventItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("EventOrganizerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EventTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DateTime")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("EventOrganizerId");

                    b.HasIndex("LocationId");

                    b.ToTable("EventItems");
                });

            modelBuilder.Entity("Calendar.Core.Domain.Entities.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Calendar.Core.Domain.Entities.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("EventItemMember", b =>
                {
                    b.Property<Guid>("EventItemsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MembersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EventItemsId", "MembersId");

                    b.HasIndex("MembersId");

                    b.ToTable("EventItemMember");
                });

            modelBuilder.Entity("Calendar.Core.Domain.Entities.EventItem", b =>
                {
                    b.HasOne("Calendar.Core.Domain.Entities.Member", "EventOrganizer")
                        .WithMany("EventOrganizers")
                        .HasForeignKey("EventOrganizerId");

                    b.HasOne("Calendar.Core.Domain.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.Navigation("EventOrganizer");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("EventItemMember", b =>
                {
                    b.HasOne("Calendar.Core.Domain.Entities.EventItem", null)
                        .WithMany()
                        .HasForeignKey("EventItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calendar.Core.Domain.Entities.Member", null)
                        .WithMany()
                        .HasForeignKey("MembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Calendar.Core.Domain.Entities.Member", b =>
                {
                    b.Navigation("EventOrganizers");
                });
#pragma warning restore 612, 618
        }
    }
}
